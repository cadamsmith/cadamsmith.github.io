/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/main.js":
/*!*****************************!*\
  !*** ./src/scripts/main.js ***!
  \*****************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // add click events to all of the navbar burger btns\n  var navbarBurgerBtns = Array.from(document.getElementsByClassName('navbar-burger'));\n  navbarBurgerBtns.forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      var target = document.getElementById(btn.dataset.target);\n\n      if (!target) {\n        return;\n      } // activate navbar burger btn and navbar burger menu\n\n\n      btn.classList.toggle('is-active');\n      target.classList.toggle('is-active');\n    });\n  });\n  var navLinks = Array.from(document.getElementsByClassName('nav-link'));\n  navLinks.forEach(function (link) {\n    link.addEventListener('click', function () {\n      var navBurgerBtn = document.getElementById(link.dataset.target);\n      var navMenu = document.getElementById(navBurgerBtn.dataset.target);\n\n      if (!navBurgerBtn || !navMenu) {\n        return;\n      } // close burger menu\n\n\n      navBurgerBtn.classList.remove('is-active');\n      navMenu.classList.remove('is-active');\n    });\n  });\n  configureTerminal();\n  var auburnTabs = Array.from(document.querySelectorAll('#auburnTabs .tab'));\n  auburnTabs.forEach(function (tab) {\n    tab.addEventListener('click', function () {\n      var isActive = tab.classList.contains('is-active');\n\n      if (!isActive) {\n        var tabContentID = tab.dataset.target;\n\n        if (!tabContentID) {\n          return;\n        }\n\n        deselectAllAuburnTabs();\n        tab.classList.add('is-active');\n        var tabContent = document.getElementById(tabContentID);\n        deselectAllAuburnTabContents();\n        tabContent.classList.add('is-active');\n      }\n    });\n  });\n}); // setting up the terminal\n\nfunction configureTerminal() {\n  // Custom theme to match style of xterm.js logo\n  var baseTheme = {\n    foreground: '#F8F8F8',\n    background: '#2D2E2C',\n    selection: '#5DA5D533',\n    black: '#1E1E1D',\n    brightBlack: '#262625',\n    red: '#CE5C5C',\n    brightRed: '#FF7272',\n    green: '#5BCC5B',\n    brightGreen: '#72FF72',\n    yellow: '#CCCC5B',\n    brightYellow: '#FFFF72',\n    blue: '#5D5DD3',\n    brightBlue: '#7279FF',\n    magenta: '#BC5ED1',\n    brightMagenta: '#E572FF',\n    cyan: '#5DA5D5',\n    brightCyan: '#72F0FF',\n    white: '#F8F8F8',\n    brightWhite: '#FFFFFF'\n  }; // vscode-snazzy https://github.com/Tyriar/vscode-snazzy\n\n  var otherTheme = {\n    foreground: '#eff0eb',\n    background: '#282a36',\n    selection: '#97979b33',\n    black: '#282a36',\n    brightBlack: '#686868',\n    red: '#ff5c57',\n    brightRed: '#ff5c57',\n    green: '#5af78e',\n    brightGreen: '#5af78e',\n    yellow: '#f3f99d',\n    brightYellow: '#f3f99d',\n    blue: '#57c7ff',\n    brightBlue: '#57c7ff',\n    magenta: '#ff6ac1',\n    brightMagenta: '#ff6ac1',\n    cyan: '#9aedfe',\n    brightCyan: '#9aedfe',\n    white: '#f1f1f0',\n    brightWhite: '#eff0eb'\n  };\n  var isBaseTheme = true;\n  var terminal = new window.Terminal({\n    fontFamily: '\"Cascadia Code\", Menlo, monospace',\n    theme: isBaseTheme ? baseTheme : otherTheme,\n    cursorBlink: true\n  });\n  var fitAddOn = new window.FitAddon.FitAddon();\n  terminal.loadAddon(fitAddOn);\n  terminal.open(document.querySelector('.terminal-wrapper'));\n  fitAddOn.fit();\n  window.addEventListener('resize', function () {\n    setTimeout(function () {\n      fitAddOn.fit();\n    }, 20);\n  });\n  var isWebglEnabled = false;\n\n  try {\n    var webgl = new window.WebglAddon.WebglAddon();\n    terminal.loadAddon(webgl);\n    isWebglEnabled = true;\n  } catch (e) {\n    console.warn('WebGL addon threw an exception during load', e);\n  } // Cancel wheel events from scrolling the page if the terminal has scrollback\n\n\n  document.querySelector('.xterm').addEventListener('wheel', function (e) {\n    if (terminal.buffer.active.baseY > 0) {\n      e.preventDefault();\n    }\n  });\n\n  function runFakeTerminal() {\n    if (terminal._initialized) {\n      return;\n    }\n\n    terminal._initialized = true;\n\n    terminal.prompt = function () {\n      terminal.write('\\r\\n$ ');\n    };\n\n    terminal.writeln('┻━┻ ︵ヽ(`Д´)ﾉ︵ ┻━┻');\n    terminal.writeln('\\nWelcome to my site!');\n    terminal.writeln('Enter `help` to see all terminal commands');\n    prompt(terminal);\n    terminal.onData(function (e) {\n      switch (e) {\n        case \"\\x03\":\n          // Ctrl+C\n          terminal.write('^C');\n          prompt(terminal);\n          break;\n\n        case '\\r':\n          // Enter\n          runCommand(terminal, command);\n          command = '';\n          break;\n\n        case \"\\x7F\":\n          // Backspace (DEL)\n          // Do not delete the prompt\n          if (terminal._core.buffer.x > 2) {\n            terminal.write('\\b \\b');\n\n            if (command.length > 0) {\n              command = command.substr(0, command.length - 1);\n            }\n          }\n\n          break;\n\n        default:\n          // Print all other characters for demo\n          if (e >= String.fromCharCode(0x20) && e <= String.fromCharCode(0x7E) || e >= \"\\xA0\") {\n            command += e;\n            terminal.write(e);\n          }\n\n      }\n    });\n  }\n\n  function prompt(term) {\n    command = '';\n    term.write('\\r\\n$ ');\n  }\n\n  var command = '';\n  var commands = {\n    help: {\n      f: function f() {\n        terminal.writeln(['', 'Try some of the commands below:'].concat(_toConsumableArray(Object.keys(commands).map(function (e) {\n          return \" - \".concat(e.padEnd(10), \" \").concat(commands[e].description);\n        }))).join('\\n\\r'));\n        prompt(terminal);\n      },\n      description: 'Prints this help message'\n    },\n    ls: {\n      f: function f() {\n        terminal.writeln(['a', 'bunch', 'of', 'fake', 'files'].join('\\r\\n'));\n        terminal.prompt(terminal);\n      },\n      description: 'Prints a fake directory structure'\n    },\n    clear: {\n      f: function f() {\n        terminal.reset();\n        terminal.write('$ ');\n      },\n      description: 'Clears the terminal screen'\n    }\n  };\n\n  function runCommand(term, text) {\n    var command = text.trim().split(' ')[0];\n\n    if (command.length > 0) {\n      term.writeln('');\n\n      if (command in commands) {\n        commands[command].f();\n        return;\n      }\n\n      term.writeln(\"\".concat(command, \": command not found\"));\n    }\n\n    prompt(term);\n  }\n\n  runFakeTerminal();\n}\n\nfunction deselectAllAuburnTabs() {\n  var auburnTabs = Array.from(document.querySelectorAll('#auburnTabs .tab'));\n  auburnTabs.forEach(function (tab) {\n    tab.classList.remove('is-active');\n  });\n}\n\nfunction deselectAllAuburnTabContents() {\n  var auburnTabContents = Array.from(document.querySelectorAll('#auburnTabContents .tab-content'));\n  auburnTabContents.forEach(function (tabContent) {\n    tabContent.classList.remove('is-active');\n  });\n}\n\n//# sourceURL=webpack://cadamsmith.github.io/./src/scripts/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts/main.js"]();
/******/ 	
/******/ })()
;